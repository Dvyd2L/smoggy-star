---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es-ES" data-bs-theme="dark" custom-theme="dark" custom-hue="0">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"></script>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --color-bg: canvas;
    font-family:
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      "Open Sans",
      "Helvetica Neue",
      sans-serif;
  }

  [data-bs-theme="light"] {
    --color-background: rgb(222, 222, 222);
    --color-text: rgb(30, 30, 30);
    /* color-scheme: light; */
  }
  [data-bs-theme="dark"] {
    --color-background: rgb(25, 25, 25);
    --color-text: rgb(200, 200, 200);
    /* color-scheme: dark; */
  }
  [custom-theme="green"] {
    --color-background: darkgreen;
    --color-text: lightgreen;
  }
  [custom-theme="blue"] {
    --color-background: navy;
    --color-text: lightblue;
  }
  [custom-theme="red"] {
    --color-background: rgb(56, 0, 0);
    --color-text: crimson;
  }

  [custom-hue="0"] {
    --hue: 0turn;
  }
  [custom-hue="0.1"] {
    --hue: .1turn;
  }
  [custom-hue="0.2"] {
    --hue: .2turn;
  }
  [custom-hue="0.3"] {
    --hue: .3turn;
  }
  [custom-hue="0.4"] {
    --hue: .4turn;
  }
  [custom-hue="0.5"] {
    --hue: .5turn;
  }
  [custom-hue="0.6"] {
    --hue: .6turn;
  }
  [custom-hue="0.7"] {
    --hue: .7turn;
  }
  [custom-hue="0.8"] {
    --hue: .8turn;
  }
  [custom-hue="0.9"] {
    --hue: .9turn;
  }
  @property --hue {
    syntax: <angle>;
    inherit: true;
    initial-value: 0;
  }
  * {
    background-color: var(--color-background);
    color: var(--color-text);
    filter: hue-rotate(var(--hue));
  }
</style>
